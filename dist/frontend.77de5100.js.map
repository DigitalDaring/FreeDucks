{"version":3,"sources":["components/sample-button.ts","freeducks/index.ts","components/state-dump.ts","components/potted-plant.ts","components/game-window.ts","state/layer.ts","state/scene.ts","state/entity.ts","state/sprite.ts","index.ts","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"frontend.77de5100.js","sourceRoot":"..","sourcesContent":["import {Action, FreeDucks} from './freeducks/index';\r\n\r\nexport class SampleButton extends HTMLElement {\r\n    private shadow: ShadowRoot;\r\n    private clickCount = 0;\r\n\r\n    constructor(private freeducks: FreeDucks) {\r\n        super();\r\n        this.shadow = this.attachShadow({mode: 'open'});\r\n        this.render();\r\n        this.addEventListener('click', this.incrementCount);\r\n        this.freeducks.subscribe((state: any) => {\r\n            this.clickCount = state.count;\r\n            this.render();\r\n        });\r\n    }\r\n\r\n    static get componentName(): string {\r\n        return 'sample-button';\r\n    }\r\n\r\n    private incrementCount() {\r\n        this.freeducks.dispatch({name: 'increment'} as Action);\r\n    }\r\n\r\n    private get css(): string {\r\n        return `\r\n            a.clickable {\r\n                padding: 10px;\r\n                border-radius: 10px;\r\n                background-color: #66C;\r\n                color: #FFF;\r\n                cursor: pointer;\r\n                box-shadow: 1px 2px 3px #ccc;\r\n            }\r\n\r\n            a.clickable:hover {\r\n                box-shadow: 0px 1px 2px #bbb;\r\n            }\r\n        `;\r\n    }\r\n\r\n    private render() {\r\n        this.shadow.innerHTML = `\r\n            <style>${this.css}</style>\r\n            <a class=\"clickable\">\r\n                Clicked ${this.clickCount} times!\r\n            </a>\r\n        `;\r\n    }\r\n}","export class FreeDucks {\r\n   private state: any;\r\n   private reducers: Array<Reducer>;\r\n   private subscriptions: Array<Function>;\r\n   \r\n   constructor(state: any) {\r\n       this.state = state;\r\n       this.reducers = [];\r\n       this.subscriptions = [];\r\n   }\r\n\r\n   dispatch(action: Action) {\r\n       this.reducers.forEach((reducer) => {\r\n           this.state = reducer.update(action, this.state);\r\n       });\r\n\r\n       const updates = Object.assign({}, this.state);\r\n       this.updateSubscriptions(updates);\r\n   }\r\n\r\n   updateSubscriptions(newState: any) {\r\n       this.subscriptions.forEach((subscription) => {\r\n           subscription(newState);\r\n       })\r\n   }\r\n\r\n   subscribe(callback: Function) {\r\n       this.subscriptions.push(callback);\r\n       callback(this.state);\r\n   }\r\n\r\n   registerReducer(reducer: Reducer) {\r\n       this.reducers.push(reducer);\r\n   }\r\n}\r\n\r\nexport interface Action {\r\n    name: string;\r\n    data: any;\r\n}\r\n\r\nexport interface Reducer {\r\n    update: (action:Action, state:any) => {};\r\n}\r\n","import {FreeDucks} from '../freeducks/index';\r\n\r\nexport class StateDump extends HTMLElement {\r\n\r\n    private shadow: ShadowRoot;\r\n\r\n    constructor(private freeducks: FreeDucks) {\r\n        super();\r\n        this.shadow = this.attachShadow({mode: 'open'});\r\n        freeducks.subscribe((state) => {\r\n            this.render(state);\r\n        });\r\n    }\r\n\r\n    static get componentName(): string {\r\n        return 'state-dump';\r\n    }\r\n\r\n    private get css(): string {\r\n        return `\r\n\r\n        `;\r\n    }\r\n\r\n    private render(state: any) {\r\n        const friendlyState = JSON.stringify(state, null, 2);\r\n        this.shadow.innerHTML = `<pre>${friendlyState}</pre>`\r\n    }\r\n\r\n\r\n}","import {FreeDucks} from '../freeducks/index';\r\nimport background from '../assets/plants/plants_00.png';\r\nimport seed from '../assets/plants/plants_01.png';\r\nimport seedling from '../assets/plants/plants_02.png';\r\nimport young from '../assets/plants/plants_03.png';\r\nimport grown from '../assets/plants/plants_04.png';\r\nimport berries from '../assets/plants/plants_05.png';\r\n\r\nexport class PottedPlant extends HTMLElement {\r\n    private canvas: HTMLCanvasElement;\r\n    private canvasContext: CanvasRenderingContext2D;\r\n    private shadow: ShadowRoot;\r\n\r\n    constructor(private freeducks: FreeDucks) {\r\n        super();\r\n        this.shadow = this.attachShadow({mode: 'open'});\r\n        \r\n        //'<canvas id=\"plant-canvas\" width=\"48px\" height=\"72px\"></canvas';\r\n        // this.canvas = this.shadow.querySelector('#plant-canvas') as HTMLCanvasElement;\r\n        // this.canvasContext = this.canvas.getContext('2d');\r\n        // this.canvasContext.fillStyle = 'rgba(0,0,0,1)';\r\n        // this.canvasContext.fillRect(0, 0, 20, 20);\r\n\r\n        this.freeducks.subscribe((state) => {\r\n            this.render(state);\r\n        })\r\n\r\n    }\r\n\r\n    static get componentName(): string {\r\n        return 'potted-plant';\r\n    }\r\n\r\n    private get css(): string {\r\n        return `\r\n            .shelf {\r\n                position: relative;\r\n                width: 48px;\r\n                height: 72px;\r\n            }\r\n\r\n            img {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 48px;\r\n                height: 72px;\r\n            }\r\n\r\n            img.pot {\r\n                z-index: 100;\r\n            }\r\n\r\n            img.plant {\r\n                z-index: 200;\r\n            }\r\n\r\n            img.berries {\r\n                z-index: 300;\r\n            }\r\n        `\r\n    }\r\n\r\n    private render(state: any) {\r\n\r\n        let plantProgress;\r\n        let berriesProgress;\r\n        if (state.count > 1) {\r\n            plantProgress = seed;\r\n        }\r\n\r\n        if (state.count > 10) {\r\n            plantProgress = seedling;\r\n        }\r\n\r\n        if (state.count > 20) {\r\n            plantProgress = young;\r\n        }\r\n\r\n        if (state.count > 30) {\r\n            plantProgress = grown;\r\n        }\r\n\r\n        if (state.count > 40) {\r\n            berriesProgress = berries;\r\n        }\r\n\r\n        const plantImage = `<img class=\"plant\" src=\"${plantProgress}\">`;\r\n        const berriesImage = `<img class=\"berries\" src=\"${berriesProgress}\">`;\r\n\r\n        this.shadow.innerHTML = `\r\n            <style>\r\n                ${this.css}\r\n            </style>\r\n            <div class=\"shelf\">\r\n                <img class=\"pot\" src=\"${background}\">\r\n                ${berriesProgress ? berriesImage: ''}\r\n                ${plantProgress ? plantImage: ''}\r\n            </div>\r\n        `\r\n    }\r\n}","import {Action, FreeDucks} from '../freeducks/index';\r\nimport { Entity } from './state/entity';\r\nimport { Sprite } from './state/sprite';\r\n\r\nexport class GameWindow extends HTMLElement {\r\n    private canvas: HTMLCanvasElement;\r\n    private canvasContext: CanvasRenderingContext2D;\r\n    private shadow: ShadowRoot;\r\n\r\n    constructor(private freeducks: FreeDucks) {\r\n        super();\r\n        this.shadow = this.attachShadow({mode: 'open'});\r\n        \r\n        this.shadow.innerHTML = '<canvas id=\"plant-canvas\" width=\"48px\" height=\"72px\"></canvas>';\r\n        this.canvas = this.shadow.querySelector('#plant-canvas') as HTMLCanvasElement;\r\n        this.canvasContext = this.canvas.getContext('2d');\r\n\r\n        this.freeducks.subscribe((state) => {\r\n            this.render(state);\r\n        });\r\n\r\n        window.setInterval(() => {\r\n            this.freeducks.dispatch({name: 'increment'} as Action);\r\n        }, 2000);\r\n    }\r\n\r\n    static get componentName(): string {\r\n        return 'game-window';\r\n    }\r\n\r\n    private render(state: any) {\r\n        this.canvas.width = state.tileSizeX * state.scene.width;\r\n        this.canvas.height = state.tileSizeY * state.scene.height;\r\n\r\n        this.canvasContext.fillStyle = '#FFF';\r\n        this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        state.scene.layers.forEach(layer => {\r\n            layer.tileMap.forEach((row, yIdx) => {\r\n                const y = yIdx * state.tileSizeY;\r\n                row.forEach((cell, xIdx) => {\r\n                    const x = xIdx * state.tileSizeX;\r\n                    const toDraw = state.tileSet[cell];\r\n                    if(toDraw) {\r\n                        this.canvasContext.drawImage(toDraw, x, y);\r\n                    }\r\n                });\r\n            })\r\n        });\r\n\r\n        state.scene.entities.forEach((entity: Entity) => {\r\n            const y = this.canvas.height - entity.y * state.tileSizeY;\r\n            entity.sprites.forEach((sprite: Sprite) => {\r\n                this.canvasContext.drawImage(sprite.image, entity.x * state.tileSizeX, y);\r\n            });\r\n        });\r\n    }\r\n}\r\n","export class Layer {\r\n    width: Number;\r\n    height: Number;\r\n    x: Number;\r\n    y: Number;\r\n    z: Number;\r\n    id: String;\r\n    tileMap: Array<Array<String>>;\r\n}","import {Layer} from './layer';\r\nimport {Entity} from './entity';\r\n\r\nexport class Scene {\r\n    id: String;\r\n    height: Number;\r\n    width: Number;\r\n    layers: Array<Layer>;\r\n    entities: Array<Entity>;\r\n}","import {Sprite} from './sprite';\r\n\r\nexport class Entity {\r\n    x: Number;\r\n    y: Number;\r\n    name: String;\r\n    sprites: Array<Sprite>;\r\n    onStateChange: Function;\r\n}","export class Sprite {\r\n    image: HTMLImageElement;\r\n    name: String;\r\n}","import {SampleButton} from './components/sample-button';\r\nimport {FreeDucks, Reducer, Action} from './freeducks/index';\r\nimport { StateDump } from './components/state-dump';\r\nimport { PottedPlant } from './components/potted-plant';\r\nimport { GameWindow } from './components/game-window';\r\nimport { Layer } from './state/layer';\r\nimport { Scene } from './state/scene';\r\n\r\nimport plantPot from './assets/plants/plants_00.png';\r\nimport seed from './assets/plants/plants_01.png';\r\nimport seedling from './assets/plants/plants_02.png';\r\nimport young from './assets/plants/plants_03.png';\r\nimport grown from './assets/plants/plants_04.png';\r\nimport berries from './assets/plants/plants_05.png';\r\n\r\nimport brickWall from './assets/building/wall_02.png';\r\nimport leftWindow from './assets/building/wall_01.png';\r\nimport rightWindow from './assets/building/wall_00.png';\r\nimport topLeftWindow from './assets/building/wall_03.png';\r\nimport topWindow from './assets/building/wall_05.png';\r\nimport topRightWindow from './assets/building/wall_04.png';\r\nimport windowPane from './assets/building/wall_06.png';\r\nimport { Entity } from './state/entity';\r\nimport { Sprite } from './state/sprite';\r\n\r\nconst blankScene = new Scene();\r\nblankScene.width = 10;\r\nblankScene.height = 4;\r\nblankScene.layers = [];\r\nblankScene.entities = [];\r\n\r\nconst wallImage = new Image(64, 96);\r\nwallImage.src = brickWall;\r\n\r\nconst leftWindowImage = new Image(64, 96);\r\nleftWindowImage.src = leftWindow;\r\n\r\nconst rightWindowImage = new Image(64, 96);\r\nrightWindowImage.src = rightWindow;\r\n\r\nconst topLeftWindowImage = new Image(64, 96);\r\ntopLeftWindowImage.src = topLeftWindow;\r\n\r\nconst topWindowImage = new Image(64, 96);\r\ntopWindowImage.src = topWindow;\r\n\r\nconst topRightWindowImage = new Image(64, 96);\r\ntopRightWindowImage.src = topRightWindow;\r\n\r\nconst windowPaneImage = new Image(64, 96);\r\nwindowPaneImage.src = windowPane;\r\n\r\nconst plantPotImage = new Image(64, 96);\r\nplantPotImage.src = plantPot;\r\n\r\nconst seedImage = new Image(64, 96);\r\nseedImage.src = seed;\r\n\r\nconst seedlingImage = new Image(64, 96);\r\nseedlingImage.src = seedling;\r\n\r\nconst youngImage = new Image(64, 96);\r\nyoungImage.src = young;\r\n\r\nconst grownImage = new Image(64, 96);\r\ngrownImage.src = grown;\r\n\r\nconst berriesImage = new Image(64, 96);\r\nberriesImage.src = berries;\r\n\r\nconst wallLayer = new Layer();\r\nwallLayer.width = 10;\r\nwallLayer.height = 3;\r\nwallLayer.x = 0;\r\nwallLayer.y = 0;\r\nwallLayer.z = 0;\r\nwallLayer.tileMap = new Array<Array<String>>();\r\n\r\nconst wallMapString = `\r\n# { = = } { = = } #\r\n# [ W W ] [ W W ] #\r\n# # # # # # # # # #`;\r\n\r\nconst wallRows = wallMapString.split('\\n');\r\nwallLayer.tileMap = wallRows.map(row => {\r\n    return row.trim().split(' ');\r\n});\r\n\r\nconst pottedPlant = new Entity();\r\npottedPlant.name = \"MyPlant\";\r\nconst pot = new Sprite();\r\npot.image = plantPotImage;\r\npot.name = \"pot\";\r\npottedPlant.sprites = [\r\n    pot\r\n];\r\npottedPlant.x = 2;\r\npottedPlant.y = 2;\r\n\r\nconst freeducks = new FreeDucks(\r\n    {\r\n        count: 0,\r\n        scene: blankScene,\r\n        tileSet: {},\r\n        tileSizeX: 64,\r\n        tileSizeY: 96\r\n    }\r\n);\r\n\r\nconst countReducer = {\r\n    update: (action: Action, state: any): any => {\r\n        let newState = Object.assign({}, state);\r\n        if(action.name === 'increment') {\r\n            newState.count = state.count + 1;\r\n        }\r\n        return newState;\r\n    }\r\n} as Reducer\r\n\r\nconst tileSetReducer = {\r\n    update: (action: Action, state: any): any => {\r\n        let newState = Object.assign({}, state);\r\n        if(action.name === 'setTile') {\r\n            newState.tileSet[action.data.id] = action.data.tile;\r\n        }\r\n        return newState;\r\n    }\r\n}\r\n\r\nconst layerReducer = {\r\n    update: (action: Action, state: any): any => {\r\n        let newState = Object.assign({}, state);\r\n        if(action.name === 'addLayer') {\r\n            newState.scene.layers = [...newState.scene.layers, action.data];\r\n        }\r\n        return newState;\r\n    }\r\n}\r\n\r\nconst entityReducer = {\r\n    update: (action: Action, state: any): any => {\r\n        let newState = Object.assign({}, state);\r\n        if(action.name === 'addEntity') {\r\n            newState.scene.entities = [...newState.scene.entities, action.data];\r\n        }\r\n        return newState;\r\n    }\r\n}\r\n\r\nfreeducks.registerReducer(countReducer);\r\nfreeducks.registerReducer(tileSetReducer);\r\nfreeducks.registerReducer(layerReducer);\r\nfreeducks.registerReducer(entityReducer);\r\n\r\nconst DefineWithState = (ComponentClass) => {\r\n    class InjectedComponent extends ComponentClass {\r\n        constructor() {\r\n            super(freeducks);\r\n        }\r\n    }\r\n\r\n    window.customElements.define(ComponentClass.componentName, InjectedComponent);\r\n}\r\n\r\nDefineWithState(SampleButton);\r\nDefineWithState(StateDump);\r\nDefineWithState(PottedPlant);\r\nDefineWithState(GameWindow);\r\n\r\nwallImage.onload = () => {\r\n\r\n/*import leftWindow from './assets/building/wall_01.png';\r\nimport rightWindow from './assets/building/wall_00.png';\r\nimport topLeftWindow from './assets/building/wall_03.png';\r\nimport topWindow from './assets/building/wall_05.png';\r\nimport topRightWindow from './assets/building/wall_04.png';\r\nimport windowPane from './assets/building/wall_06.png';\r\n*/\r\n\r\n    freeducks.dispatch({name: 'setTile', data: {id: '#', tile: wallImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: '[', tile: leftWindowImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: ']', tile: rightWindowImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: '{', tile: topLeftWindowImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: '}', tile: topRightWindowImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: '=', tile: topWindowImage}} as Action);\r\n    freeducks.dispatch({name: 'setTile', data: {id: 'W', tile: windowPaneImage}} as Action);\r\n    //freeducks.dispatch({name: 'addLayer', data: backgroundLayer});\r\n    freeducks.dispatch({name: 'addLayer', data: wallLayer} as Action);\r\n    freeducks.dispatch({name: 'addEntity', data: pottedPlant} as Action);\r\n\r\n};\r\n\r\n\r\n\r\n\r\n// class InjectedSampleButton extends SampleButton{\r\n//     constructor() {\r\n//         super(freeducks);\r\n//     }\r\n// }\r\n\r\n// class InjectedStateDump extends StateDump{\r\n//     constructor() {\r\n//         super(freeducks);\r\n//     }\r\n// }\r\n\r\n// class InjectedPottedPlant extends PottedPlant {\r\n//     constructor() {\r\n//         super(freeducks);\r\n//     }\r\n// }\r\n\r\n// window.customElements.define(SampleButton.componentName, InjectedSampleButton);\r\n// window.customElements.define(StateDump.componentName, InjectedStateDump);\r\n// window.customElements.define(PottedPlant.componentName, InjectedPottedPlant);\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}